openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Infra-manager Management API'
  description: 'The management api for Infrastructure config and status.
                Getting infrastructure list and individual infrastructure by instance ID.
                Moreover, getting the number of infrastructe existance.
                Update and delete the particular infrastructure.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v1/infra_manager/infra:
    post:
      description: Create infrastructure request
      summary: Create infrastructure request
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createInfra'
      responses:
          201:
            description: creating infrastures
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      description: Get infrastructure request
      summary: Get infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
        - in: query
          name: per_page
          required: true
          schema:
            type: string
      responses:
          201:
            description: array of infrastructurs
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresArray'
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/{id}:
    get:
      description: Get infrastructure request
      summary: Get infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: array of infrastructurs
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    put:
      description: Update infrastructure by id
      summary: Update infrastructure by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateInfraObj'
      responses:
          201:
            description: infrastructurs respose
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      description: Delete infrastructure by id
      summary: Delete infrastructure by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: delete infrastructurs respose
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/servers/count:
    get:
      description: Get infrastructures count
      summary: Get infrastructures count
      security:
        - bearerAuth: []
      responses:
          201:
            description: count infrastructurs object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/countObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/instance/{id}:
    get:
      description: Get infrastructure by instace ID
      summary: Get infrastructure by instace ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/servers/status:
    description: Get infrastructure server status by host name or public IP
    get:
      security:
        - bearerAuth: []
      summary: Get infrastructure by using host name or public IP
      parameters:
        - in: query
          name: host
          schema:
            type: string
      responses:
          200:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/tenants/{tid}:
    description: Get, Create, Delete and Update infrastructure using Tenant ID
    get:
      security:
        - bearerAuth: []
      summary: Get infrastructure using Tenant ID
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      responses:
          200:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      summary: Create Infrastructre
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraStructuresObj'
      responses:
          200:
            description: Infrastructurs created successfully.
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    put:
      summary: Update Infrastructre
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfraStructuresObj'
      responses:
          201:
            description: Infrastructurs updated successfully.
          400:
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      summary: Delete infrastructure using Tenant Id.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      responses:
          201:
            description: Infrastructurs deleted successfully.
          400:
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        error: 'Error string'
        request_id: f7881e82-0492-49fb-b459-795654e7188a
    onvifRtspPortRange:
      description: onvif port ranges object
      type: object
      properties:
        start:
          type: number
        end:
          type: number
    createInfra:
      description: create infrastructure
      type: object
      properties:
        name:
          type: string
        instance_id:
          type: string
        public_ip:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
    getInfraStructuresObj:
      description: get infrastructure object
      type: object
      properties:
        name:
          type: string
        instance_id:
          type: string
        public_ip:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        created_ts:
          type: string
        updated_ts:
          type: string
    getInfraStructuresArray:
      description: getting list of ifrastructures array
      type: array
      items:
        $ref: '#/components/schemas/getInfraStructuresObj'
    updateInfraObj:
      description: update infrastructure by ID
      type: object
      properties:
        onvif_port_range:
            $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
    countObj:
      description: count object
      type: object
      properties:
        count:
          type: number
    error:
      type: object
      properties:
        state:
          type: string
        msg:
          type: string

    EwcServer:
      type: object
      properties:
        uptime:
          type: string
        restartCount:
          type: string
        status:
          type: string
        error:
          $ref: '#/components/schemas/error'

    bridgeMgr:
      type: object
      properties:
        uptime:
          type: string
        restartCount:
          type: string
        status:
          type: string
        error:
          $ref: '#/components/schemas/error'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        
    Status:
      description: infrastructure Status
      type: object
      properties:
        ewcVersion:
          type: string
        protocolVersion:
          type: string
        ewcServer:
          $ref: '#/components/schemas/EwcServer'
        bridgeMgr:
          $ref: '#/components/schemas/bridgeMgr'

    InfraStructuresObj:
      description: Post Infrastructure object.
      type: object
      properties:
        name:
          type: string
        tenant_id:
          type: string
        type:
          description: EWC or EWI
          type: string
        domain_name:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
    
    UpdateInfraStructuresObj:
      description: Update Infrastructure object.
      type: object
      properties:
        public_ip:
          type: string
        private_ip:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        ewc_conn_status:
          type: boolean
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        
