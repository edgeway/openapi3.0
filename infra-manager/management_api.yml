openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Infra-manager Management API'
  description: 'The management api for Infrastructure config and status.
                Getting infrastructure list and individual infrastructure by instance ID.
                Moreover, getting the number of infrastructe existance.
                Update and delete the particular infrastructure.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v2/infra_manager/infrastructures:
    post:
      description: Create infrastructure request
      summary: Create infrastructure request
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2CreateInfra'
      responses:
          200:
            description: creating infrastures success
                        InfraID is added as part of Header named as 'location'
            headers:
              Location:
                schema:
                  type: string
                description: infrastructure ID.
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    get:
      description: Get list of infrastructures
      summary: Get list of infrastructure.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
        - in: query
          name: per_page
          required: true
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
        - in: query
          name: filter
          style: deepObject
          allowReserved: true
          schema:
            type: object
            properties:
              page:
                type: string
              per_page:
                type: string
              sort:
                type: array
                items:
                  type: string
              has_group:
                type: boolean
              default:
                type: array
                items:
                  type: string
              fields:
                type: array
                items:
                  type: string
              group:
                type: array
                items:
                  type: string
      responses:
          200:
            description: Getting list of infrastructures.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/v2ListInfrastructure'
            headers:
              X-Total-Count:
                schema:
                  type: integer
                description: Request limit per hour.
              Link:
                schema:
                  type: string
                description: Standard header, we support 'first', 'next', and 'prev'.
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      
  /api/management/v2/infra_manager/infrastructures/{id}:
    get:
      description: Get infrastructure request
      summary: Get infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: Infrastructurs by ID
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/v2Infrastructure'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      description: Delete infrastructure request
      summary: Delete infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: confirm
          required: true
          schema:
            type: boolean
      responses:
          204:
            description: Infrastructurs deleted success
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    put:
      description: Update user infrastructure
      summary: Update user infrastructure
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2InfrastructureUserUpdate'
      responses:
          202:
            description: Infrastructure updated successfully.
          400:
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/management/v2/infra_manager/infrastructures/{id}/ports:
    put:
      description: Update infrastructure VC and RA ports
      summary: Update infrastructure VC and RA ports
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2PortRangeUpdate'
      responses:
          202:
            description: Infrastructure port ranges updated successfully.
          400:
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/management/v2/infra_manager/infrastructures/{id}/default:
    put:
      description: Tag default infrastructure
      summary: Tag default infrastructure
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          202:
            description: Infrastructure taged as default successfully.
          400:
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: Not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /api/management/v1/infra_manager/infra:
    post:
      description: Create infrastructure request
      summary: Create infrastructure request
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createInfra'
      responses:
          201:
            description: creating infrastures
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      description: Get infrastructure request
      summary: Get infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
        - in: query
          name: per_page
          required: true
          schema:
            type: string
      responses:
          201:
            description: array of infrastructurs
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresArray'
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/{id}:
    get:
      description: Get infrastructure request
      summary: Get infrastructure request
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: array of infrastructurs
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    put:
      description: Update infrastructure by id
      summary: Update infrastructure by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateInfraObj'
      responses:
          201:
            description: infrastructurs respose
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      description: Delete infrastructure by id
      summary: Delete infrastructure by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: delete infrastructurs respose
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/servers/count:
    get:
      description: Get infrastructures count
      summary: Get infrastructures count
      security:
        - bearerAuth: []
      responses:
          201:
            description: count infrastructurs object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/countObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/instance/{id}:
    get:
      description: Get infrastructure by instace ID
      summary: Get infrastructure by instace ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          400:
            description: bad request empty object is returned
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/servers/status:
    description: Get infrastructure server status by host name or public IP
    get:
      security:
        - bearerAuth: []
      summary: Get infrastructure by using host name or public IP
      parameters:
        - in: query
          name: host
          schema:
            type: string
      responses:
          200:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/infra_manager/infra/tenants/{tid}:
    description: Get, Create, Delete and Update infrastructure using Tenant ID
    get:
      security:
        - bearerAuth: []
      summary: Get infrastructure using Tenant ID
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      responses:
          200:
            description: infrastructurs response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/getInfraStructuresObj'
          401:
            description: Authorization failed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      summary: Create Infrastructre
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraStructuresObj'
      responses:
          200:
            description: Infrastructurs created successfully.
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    put:
      summary: Update Infrastructre
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfraStructuresObj'
      responses:
          201:
            description: Infrastructurs updated successfully.
          400:
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      summary: Delete infrastructure using Tenant Id.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: tid
          schema:
            type: string
      responses:
          201:
            description: Infrastructurs deleted successfully.
          400:
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        error: 'Error string'
        request_id: f7881e82-0492-49fb-b459-795654e7188a
    onvifRtspPortRange:
      description: onvif port ranges object
      type: object
      properties:
        start:
          type: integer
          format: uint64
          description: pointer to uint64
        end:
          type: integer
          format: uint64
          description: pointer to uint64
    createInfra:
      description: create infrastructure
      type: object
      properties:
        name:
          type: string
        instance_id:
          type: string
        public_ip:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
    getInfraStructuresObj:
      description: get infrastructure object
      type: object
      properties:
        name:
          type: string
        instance_id:
          type: string
        public_ip:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        created_ts:
          type: string
        updated_ts:
          type: string
    getInfraStructuresArray:
      description: getting list of ifrastructures array
      type: array
      items:
        $ref: '#/components/schemas/getInfraStructuresObj'
    updateInfraObj:
      description: update infrastructure by ID
      type: object
      properties:
        onvif_port_range:
            $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
    countObj:
      description: count object
      type: object
      properties:
        count:
          type: integer
    error:
      type: object
      properties:
        state:
          type: string
        msg:
          type: string

    EwcServer:
      type: object
      properties:
        uptime:
          type: string
        restartCount:
          type: string
        status:
          type: string
        error:
          $ref: '#/components/schemas/error'

    bridgeMgr:
      type: object
      properties:
        uptime:
          type: string
        restartCount:
          type: string
        status:
          type: string
        error:
          $ref: '#/components/schemas/error'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'

    Status:
      description: infrastructure Status
      type: object
      properties:
        ewcVersion:
          type: string
        protocolVersion:
          type: string
        ewcServer:
          $ref: '#/components/schemas/EwcServer'
        bridgeMgr:
          $ref: '#/components/schemas/bridgeMgr'

    InfraStructuresObj:
      description: Post Infrastructure object.
      type: object
      properties:
        name:
          type: string
        tenant_id:
          type: string
        type:
          description: EWC or EWI
          type: string
        domain_name:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'

    UpdateInfraStructuresObj:
      description: Update Infrastructure object.
      type: object
      properties:
        public_ip:
          type: string
        private_ip:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        ewc_conn_status:
          type: boolean
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'

    VCPortRange:
      description: VC port ranges object
      type: object
      properties:
        start:
          type: integer
          format: uint64
          description: pointer to uint64
        end:
          type: integer
          format: uint64
          description: pointer to uint64

    RAPortRange:
      description: RA port ranges object
      type: object
      properties:
        start:
          type: integer
          format: uint64
          description: pointer to uint64
        end:
          type: integer
          format: uint64
          description: pointer to uint64

    v2CreateInfra:
      description: create infrastructure
      type: object
      properties:
        name:
          type: string
          description: Name must be 5 to 12 character and should only use a-z or 0-9 
        type:
          type: string
          description: For example ewc, ewi, or ewx
        hosted_by:
          type: string
          description: Hosted by Customer or Hosted by SmarDTV
        server_port:
          type: string
          description: RMQ server port
        vc_port_range:
          $ref: '#/components/schemas/VCPortRange'
        ra_port_range:
          $ref: '#/components/schemas/RAPortRange'

    v2ListInfrastructure:
      description: Array of infrastructure
      type: array
      items:
        $ref: '#/components/schemas/v2Infrastructure'

    v2Infrastructure:
      description: Infrastructure
      type: object
      properties:
        name:
          type: string
        version:
          type: object
          properties:
            software:
              type: string
            protocol:
              type: string
        instance_id:
          type: string
        tenant_id:
          type: string
        type:
          type: string
        public_ip:
          type: string
        private_ip:
          type: string
        domain_name:
          type: string
        onvif_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        free_onvif_ports:
          type: integer
          format: uint64
        rtsp_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        free_rtsp_ports:
          type: integer
          format: uint64
        webpage_port_range:
          $ref: '#/components/schemas/onvifRtspPortRange'
        free_webpage_ports:
          type: integer
          format: uint64
        server_status:
          type: object
          properties:
            uptime:
              type: string
            status:
              type: string
            error:
              type: object
              properties:
                state:
                  type: string
                  description: "OK, OFFLINE, NOK"
                msg:
                  type: string
        ewc_conn_status:
          type: integer
          items:
            type: integer
        altd_onvif_ports:
          type: array
          items:
            type: integer
        altd_rtsp_ports:
          type: array
          items:
            type: integer
        altd_webpage_ports:
          type: array
          items:
            type: integer
        default:
          type: boolean
        pairing_status:
          type: integer
          format: int
        statistics:
          type: object
          properties:
            bandwidth:
              type: string
            bandwidth_threshold:
              type: string
            cpu_load:
              type: string
            cpu_load_threshold:
              type: string
        vc_port_range:
          $ref: '#/components/schemas/VCPortRange'
        vc_allocated_ports:
          type: array
          items:
            type: integer
        ra_port_range:
          $ref: '#/components/schemas/RAPortRange'
        ra_allocated_ports:
          type: array
          items:
            type: integer
        max_vcs:
          type: string
        vcs:
          type: array
          items:
            type: string
        max_nodes:
          type: integer
          format: int
        nodes:
          type: array
          items:
            type: string
        Status:
          type: object
          properties:
            uptime:
              type: string
            status:
              type: string
            error:
              type: object
              properties:
                state:
                  type: string
                  description: "OK, OFFLINE, NOK"
                msg:
                  type: string
        description:
          type: string
        region:
          type: string
        hosted_by:
          type: string
        server_port:
          type: string
        server_path:
          type: string
        api_key:
          type: string
        username:
          type: string
        password:
          type: string        

    V2InfrastructureUserUpdate:
      type: object
      properties:
        description:
          type: string
        server_port:
          type: string
        server_path:
          type: string

    v2PortRangeUpdate:
      type: object
      properties:
        vc_port_range:
          $ref: '#/components/schemas/VCPortRange'
        ra_port_range:
          $ref: '#/components/schemas/RAPortRange'
