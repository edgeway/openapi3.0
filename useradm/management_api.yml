openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'User administration and authentication Mnagement API'
  description: 'An API for user administration and user authentication handling.
                Intended for use by the web GUI. All responses from the API will
                contain X-MEN-RequestID header with server-side generated request ID.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v1/useradm/auth/login:
    post:
      summary: Log in to Mender
      description: |
        Accepts user credentials via standard Basic Auth, and returns a
        JWT token to be used for authentication in subsequent requests.
      responses:
        200:
          description: |
            Authentication successful - a new JWT is issued and returned.
            The JWT is signed with the API's private key ('RS256' signing algorithm),
            and contains the following standard claims:
            * 'iss' - issuer
            * 'exp' - expiry date
            * 'sub' - unique, autogenerated user ID
            * 'scp' - 'mender.*', allows access to all APIs/methods
          content:
            application/jwt:
              example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9. eyJleHAiOjE0NzYxMTkxMzYsImlzcyI6Ik1lbmRlciIsIn
                N1YiI6Ijg1NGIzMTA5LTQ4NjItNGEyNS1hMWZiLWYxMTE2 MWNlN2E4NCIsInNjcCI6WyJtZW5kZXIuKiJdfQ.
                X7Ief4PhPLlR6mA2wh3G3K0Z2tud0rK1QJesxu52NfICSe ARmlujczs-_1YZxMwI0s-HgpXHbXIjaSVK80BjxjAM1rqp
                RGvgqSqG-dU5KmglDpAaTr4VaJci3VFPlVUVTRpI7bfqNM nKZtjmOUAGwjvroDUwX1RwayEmms-efGI
        400:
          description: Bad request, see error message for details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/useradm/users:
    get:
      summary: List users
      description: |
        Returns a non-paged collection of users information.
      security:
      - bearerAuth: []
      responses:
        200:
          description: Successful response.
          content:
            '*/*':
              schema:
                title: ListOfUsers
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create user
      security:
      - bearerAuth: []
      requestBody:
        description: New user data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserNew'
        required: true
      responses:
        201:
          description: The user was successfully created.
          headers:
            Location:
              description: URI for the newly created 'User' resource.
              schema:
                type: string
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: |
            The email address is duplicated or password is too short.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user
  /api/management/v1/useradm/users/{id}:
    get:
      summary: Get user information
      description: |
        Returns user information.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response - a user information is returned.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The user was not found.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user information
      description: |
        Update user email or change user password.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        204:
          description: User information updated.
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            The user does not exist.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: |
            The email address is duplicated or password is too short.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user_update
    delete:
      summary: Remove user from the system
      description: |
        Remove user information from the system.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      responses:
        204:
          description: User removed.
          content: {}
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/useradm/settings:
    get:
      summary: Get user settings
      description: |
        Returns user settings.
      security:
      - bearerAuth: []
      responses:
        200:
          description: Successful response - a user information is returned.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Settings'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Set user settings
      description: |
        Create user settings or replace existing settings with provided object.
      security:
      - bearerAuth: []
      requestBody:
        description: New user settings.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      responses:
        201:
          description: User settings set.
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: settings
  /api/management/v1/useradm/auth/forgotpwd:
    description: Send the URL link to reset the password on provided Email
    post:
      summary: Form a reset link and send email
      description: Form a reset link and send email
      parameters:
        - name: email
          in: query
          description: email id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success to send reset link to provided email.
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error

  /api/management/v1/useradm/auth/verify:
    description: Verify link sent on mail of user
    get:
      summary: Authenticate the mail User
      description: Authenticate the mail User
      parameters:
        - name: email
          in: query
          description: email id
          required: true
          schema:
            type: string
        - name: token
          in: query
          description: JWT token hash
          required: true
          schema:
            type: string
      responses:
        303:
          description: redirected to password reset page
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v1/useradm/auth/reset:
    description: Reset the password of user
    post:
      summary: Reset the user password
      description: Reset the user password
      requestBody:
        description: password reset payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordreset'
      responses:
        204:
          description: Succes to update the password
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error

  /api/management/v1/useradm/auth/users/{id}/role:
    description: Get the role by id
    get:
      summary: Get the role (admin/viewer) by user ID
      security:
      - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: DB id
          required: true
          schema:
            type: string
      responses:
        200:
          description: success to get role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v1/useradm/auth/oauth2/auth0:
    get:
      description: Auth0 verification
      summary: Auth0 verification
      responses:
        303:
          description: redirected to authenticate code
        401:
          description: Authorisation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v1/useradm/auth/oauth2/auth0/login:
    get:
      description: Auth0 login
      summary: Auth0 login
      responses:
        303:
          description: On success redirected to verify email
                       On failure redirected to sign-up page
        400:
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorisation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserNew:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: A unique email address. Invalid characters are non-ascii and
            '+'.
        password:
          type: string
          description: Password.
      description: New user descriptor.
      example:
        application/json:
          email: user@acme.com
          password: mypass1234
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          description: A unique email address.
        password:
          type: string
          description: Password.
      description: Update user information.
      example:
        application/json:
          email: new_email@acme.com
    User:
      required:
      - email
      - id
      type: object
      properties:
        email:
          type: string
          description: A unique email address.
        id:
          type: string
          description: User Id.
        created_ts:
          type: string
          description: |
            Server-side timestamp of the user creation.
          format: date-time
        updated_ts:
          type: string
          description: |
            Server-side timestamp of the last user information update.
          format: date-time
      description: User descriptor.
      example:
        application/json:
          email: user@acme.com
          id: 806603def19d417d004a4b67e
          created_ts: 2016-10-03T16:58:51.639Z
          updated_ts: 2016-10-04T11:33:66.611Z
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        application/json:
          error: missing Authorization header
          request_id: f7881e82-0492-49fb-b459-795654e7188a
    Settings:
      type: object
      description: User settings.
    passwordreset:
      description: reset payload
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        captchacode:
          type: string
    Role:
      description: role of user id
      type: object
      properties:
        role:
          type: string
