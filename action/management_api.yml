openapi: 3.0.1
info:
  title: User administration and authentication Management API
  description: |
    An API for user administration and user authentication handling. Intended for use by the web GUI.
    All responses from the API will contain 'X-MEN-RequestID' header with server-side generated request ID.
  contact:
    name: Edgeway
    url: smardtv.com
    email: devops.vep@smardtv.com
  version: 1.0.0
servers:
- url: https://smarthing-cloud-dev.com
  description: Dev Server
- url: https://smarthing-cloud.com
  description: Prod Server

paths:
  /api/management/v1/action/auth/login:
    post:
      summary: Log in to Mender
      description: |
        Accepts user credentials via standard Basic Auth, and returns a
        JWT token to be used for authentication in subsequent requests.
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: |
          Standard Basic Auth header, based on user's credentials.
        required: true
        schema:
          type: string
      responses:
        200:
          description: |
            Authentication successful - a new JWT is issued and returned.
            The JWT is signed with the API's private key ('RS256' signing algorithm),
            and contains the following standard claims:
            * 'iss' - issuer
            * 'exp' - expiry date
            * 'sub' - unique, autogenerated user ID
            * 'scp' - 'mender.*', allows access to all APIs/methods
          content:
            application/jwt:
              example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9. eyJleHAiOjE0NzYxMTkxMzYsImlzcyI6Ik1lbmRlciIsIn
                N1YiI6Ijg1NGIzMTA5LTQ4NjItNGEyNS1hMWZiLWYxMTE2 MWNlN2E4NCIsInNjcCI6WyJtZW5kZXIuKiJdfQ.
                X7Ief4PhPLlR6mA2wh3G3K0Z2tud0rK1QJesxu52NfICSe ARmlujczs-_1YZxMwI0s-HgpXHbXIjaSVK80BjxjAM1rqp
                RGvgqSqG-dU5KmglDpAaTr4VaJci3VFPlVUVTRpI7bfqNM nKZtjmOUAGwjvroDUwX1RwayEmms-efGI
        400:
          description: Bad request, see error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/action/users:
    get:
      summary: List users
      description: |
        Returns a non-paged collection of users information.
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                title: ListOfUsers
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create user
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      requestBody:
        description: New user data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNew'
        required: true
      responses:
        201:
          description: The user was successfully created.
          headers:
            Location:
              description: URI for the newly created 'User' resource.
              schema:
                type: string
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: |
            The email address is duplicated or password is too short.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user
  /api/management/v1/action/users/{id}:
    get:
      summary: Get user information
      description: |
        Returns user information.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      responses:
        200:
          description: Successful response - a user information is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The user was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user information
      description: |
        Update user email or change user password.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      requestBody:
        description: Updated user data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        204:
          description: User information updated.
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: |
            The user does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: |
            The email address is duplicated or password is too short.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user_update
    delete:
      summary: Remove user from the system
      description: |
        Remove user information from the system.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User id.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      responses:
        204:
          description: User removed.
          content: {}
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/action/settings:
    get:
      summary: Get user settings
      description: |
        Returns user settings.
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      responses:
        200:
          description: Successful response - a user information is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Set user settings
      description: |
        Create user settings or replace existing settings with provided object.
      security:
      - bearerAuth: []
      parameters:
      - name: Authorization
        in: header
        description: Contains the JWT token issued by the User Administration and
          Authentication Service.
        required: true
        schema:
          type: string
          format: Bearer [token]
      requestBody:
        description: New user settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      responses:
        201:
          description: User settings set.
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The user cannot be granted authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: settings
  /api/management/v1/action/{deviceId}:
    get:
      summary: get the device action.
      security:
      - bearerAuth: []
      parameters:
      - name: deviceId
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device action returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/action'
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: update the device action.
      security:
      - bearerAuth: []
      parameters:
      - name: deviceId
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device action is updated.
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates new device action.
      security:
      - bearerAuth: []
      parameters:
      - name: deviceId
        in: path
        description: Device Id for which local configuration is added
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/action'
        required: true
      responses:
        200:
          description: Successfull addition of the local configuration
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The device is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: delete the action of a device.
      security:
      - bearerAuth: []
      parameters:
      - name: deviceId
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device action is deleted.
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/action/list:
    get:
      summary: Get the list of device actions.
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        description: Starting page, default 1.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of results per page, default 20.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A list of local configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfActions'
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        application/json:
          error: missing Authorization header
          request_id: f7881e82-0492-49fb-b459-795654e7188a

    UserNew:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: A unique email address. Invalid characters are non-ascii and
            '+'.
        password:
          type: string
          description: Password.
      description: New user descriptor.
      example:
        application/json:
          email: user@acme.com
          password: mypass1234

    UserUpdate:
      type: object
      properties:
        email:
          type: string
          description: A unique email address.
        password:
          type: string
          description: Password.
      description: Update user information.
      example:
        application/json:
          email: new_email@acme.com

    User:
      required:
      - email
      - id
      type: object
      properties:
        email:
          type: string
          description: A unique email address.
        id:
          type: string
          description: User Id.
        created_ts:
          type: string
          description: |
            Server-side timestamp of the user creation.
          format: date-time
        updated_ts:
          type: string
          description: |
            Server-side timestamp of the last user information update.
          format: date-time
      description: User descriptor.
      example:
        application/json:
          email: user@acme.com
          id: 806603def19d417d004a4b67e
          created_ts: 2016-10-03T16:58:51.639Z
          updated_ts: 2016-10-04T11:33:66.611Z

    action:
      type: object
      properties:
        config_details:
          type: string
          description: JSON string with device action details
        device_id:
          type: string
          description: device id for which action has triggerd
        id:
          type: string
          description: db assigned id
        created_ts:
          type: string
          description: Created timestamp
          format: datetime
        updated_ts:
          type: string
          description: Updated timestamp
          format: datetime
      description: device action model
      example:
        actions: '{"Reboot":"true", "reset":"true", "uart":"true","open_port":"80"}'
        created_ts: 2019-04-16T06:44:16.386Z
        device_id: "1"
        env_vars: '{"config_poll_interval":"2", "flavor_poll_interval":"2","actions_poll_interval":"2"}'
        id: 5cb579c066b19200019d546f
        updated_ts: 2019-04-16T06:44:16.386Z

    ArrayOfActions:
      type: array
      description: array of local configurations
      items:
        $ref: '#/components/schemas/action'

    Settings:
      type: object
      description: User settings.
