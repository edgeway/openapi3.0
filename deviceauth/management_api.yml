openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Device authentication Mnagement API'
  description: 'An API managing device auth.
                Device status for keep alive, get the device count
                update the device status'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v2/devauth/serviceinfo:
    description: Get service information
    get:
      description: Get service information
      summary: Get service information
      security:
      - bearerAuth: []
      responses:
        200:
          description: A list of local configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectInfo'
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v2/devauth/devices/search:
    description: Get device list by querying field and input
    get:
      description: Get device list by querying field and input
      summary: Get device list by querying field and input
      security:
      - bearerAuth: []
      parameters:
        - in: query
          name: field
          required: true
          schema:
            type: string
        - in: query
          name: input
          required: true
          schema:
            type: string
      responses:
        200:
          description: A list of device UUID search by field and input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UUIDList'
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v2/devauth/limits/{name}:
    description: Get limits by name
    get:
      description: Get limits by name
      summary: Get limits by name
      security:
      - bearerAuth: []
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: could be 'max_devices'.
      responses:
        200:
          description: success to get the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitValue'
        400:
          description: Missing/malformed request parameters or body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v2/devauth/devices:
    get:
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, with optional device status filter.
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        description: Results page number
        schema:
          type: number
          format: integer
          default: 1.0
      - name: per_page
        in: query
        description: Number of results per page
        schema:
          maximum: 500
          type: number
          format: integer
          default: 20.0
      - name: status
        in: query
        description: filter by status. status could be 'accepted', 'rejected', 'pending', 'preauthorized'.
        required: true
        schema:
          type: string
      - name: id_data
        in: query
        description: should be true or false
        required: false
        schema:
          type: number
          format: boolean
          default: false
      responses:
        200:
          description: An array of devices.
          headers:
            Link:
              description: Standard header, we support 'first', 'next', and 'prev'.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Submit a preauthorized device.
      description: |
        Adds a given device/authentication data set in the 'preauthorized' state.
        Designed to be called from admission, with precomputed device_id and auth_set_id.
      security:
      - bearerAuth: []
      requestBody:
        description: Preauthentication request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreAuthRequest'
        required: true
      responses:
        201:
          description: Device submitted.
          content: {}
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Device already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: pre_auth_request
  /api/management/v2/devauth/devices/{id}:
    get:
      summary: Get a particular device.
      description: Get a particular device.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Device identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: Device found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Decommission device
      description: Decommission device
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      responses:
        204:
          description: Device decommissioned.
          content: {}
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Device not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/devauth/devices/{id}/auth/{aid}:
    delete:
      summary: Remove the device authentication set
      description: |
        Removes the device authentication set.
        Removing 'accepted' authentication set is equivalent
        to rejecting device and removing authentication set.
        If there is only one authentication set for the device,
        the device will also be deleted.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      - name: aid
        in: path
        description: Authentication data set identifier.
        required: true
        schema:
          type: string
      responses:
        204:
          description: Device authentication set deleted.
          content: {}
        404:
          description: Device authentication set not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/devauth/devices/{id}/auth/{aid}/status:
    put:
      summary: Update the device authentication set status
      description: |
        Sets the status of a authentication data set of selected value.
        All possible transitions are valid.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      - name: aid
        in: path
        description: Authentication data set identifier.
        required: true
        schema:
          type: string
      requestBody:
        description: New status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevAuthApiStatus'
        required: true
      responses:
        204:
          description: The device authentication data set status was successfully
            updated.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The device was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Request cannot be fulfilled e.g. due to exceeded limit on maximum
            accepted devices (see error message).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: status
    get:
      description: get device status.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      - name: aid
        in: path
        description: Authentication data set identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The device get status was successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The device was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Request cannot be fulfilled e.g. due to exceeded limit on maximum
            accepted devices (see error message).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/devauth/devices/count:
    get:
      summary: Get a count of devices, optionally filtered by status.
      description: |
        Provides a list of devices, optionally filtered by status.
      security:
      - bearerAuth: []
      parameters:
      - name: status
        in: query
        description: |
          Device status filter, one of 'pending', 'accepted', 'rejected'. Default is 'all devices'.
        schema:
          type: string
      responses:
        200:
          description: Device count.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorised request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/devauth/tokens/{id}:
    delete:
      summary: Delete device token
      description: |
        Deletes the token, effectively revoking it. The device must
        apply for a new one with a new authentication request.
        The token 'id' corresponds to the standard 'jti' claim.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Unique token identifier('jti').
        required: true
        schema:
          type: string
      responses:
        204:
          description: The token was successfully deleted.
          content: {}
        404:
          description: The token was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        error: 'failed to decode device group data: JSON payload is empty'
        request_id: f7881e82-0492-49fb-b459-795654e7188a

    ProjectInfo:
      type: object
      properties:
        project_name:
          type: string
        project_version:
          type: string
        sub_projects:
          type: array
          items:
            properties:
              name:
                type: string
              git_hash:
                type: string

    UUIDList:
      type: array
      items:
        properties:
          uuid_list:
            type: string

    DevAuthApiStatus:
      type: object
      properties:
        status:
          type: string
          description: "status could be accepted, rejected, pending"
        type:
          type: string
          description: flavour type VMS or VSAAS
        config_name:
          type: string
        flavor_name:
          type: string
        unique_devparams:
          type: string

    Status:
      type: object
      properties:
        status:
          type: string
          description: "status could be accepted, rejected, pending"

    LimitValue:
      type: object
      properties:
        limit:
          type: string

    Device:
      type: object
      properties:
        id:
          type: string
          description: Edgeway assigned Device ID.
        identity_data:
          type: string
          description: |-
            Vendor-specific JSON representation of device identity, encrypted with the tenant's public key.
            In reference implementation, it is a JSON structure with vendor-selected fields, such as MACs, serial numbers, etc.
        status:
          type: string
        created_ts:
          type: string
          description: Created timestamp
          format: datetime
        updated_ts:
          type: string
          description: Updated timestamp
          format: datetime
        auth_sets:
          type: array
          items:
            $ref: '#/components/schemas/AuthSet'
        decommissioning:
          type: boolean
          description: Devices that are part of ongoing decomissioning process will
            return True
    AuthSet:
      type: object
      properties:
        id:
          type: string
          description: Authentication data set ID.
        pubkey:
          type: string
          description: The device's public key, generated by the device or pre-provisioned
            by the vendor.
        id_data:
          type: string
          description: |-
            Vendor-specific JSON representation of device identity, encrypted with the tenant's public key.
            In reference implementation, it is a JSON structure with vendor-selected fields, such as MACs, serial numbers, etc.
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
        ts:
          type: string
          description: Created timestamp
          format: datetime
      description: Authentication data set

    PreAuthRequest:
      required:
      - auth_set_id
      - device_id
      - id_data
      - pubkey
      type: object
      properties:
        type:
          type: string
          description: VMS or VSAAS
        config_name:
          type: string
          description: configuration name.
          default: saas_default
        flavor_name:
          description: flavour name.
          default: saas_default
        identity_data:
          type: string
          description: Vendor-specific JSON representation of the device identity
            data (MACs, serial numbers, etc.).
        pubkey:
          type: string
          description: The device's public key, generated by the device or pre-provisioned
            by the vendor.
        unique_devparams:
          type: string
          description: unique device param.
      example:
        application/json:
          id_data: '{"mac":"00:01:02:03:04:05"}'
          pubkey: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzogVU7RGDilbsoUt/DdH
            VJvcepl0A5+xzGQ50cq1VE/Dyyy8Zp0jzRXCnnu9nu395mAFSZGotZVr+sWEpO3c
            yC3VmXdBZmXmQdZqbdD/GuixJOYfqta2ytbIUPRXFN7/I7sgzxnXWBYXYmObYvdP
            okP0mQanY+WKxp7Q16pt1RoqoAd0kmV39g13rFl35muSHbSBoAW3GBF3gO+mF5Ty
            1ddp/XcgLOsmvNNjY+2HOD5F/RX0fs07mWnbD7x+xz7KEKjF+H7ZpkqCwmwCXaf0
            iyYyh1852rti3Afw4mDxuVSD7sd9ggvYMc0QHIpQNkD4YWOhNiE1AB0zH57VbUYG
            UwIDAQAB
            -----END PUBLIC KEY-----
    Count:
      type: object
      properties:
        count:
          type: integer
          description: The count of requested items.
      description: Counter type
      example:
        count: "42"

  responses:
    UnauthorizedError:
      description: Access token in missing or invalid
