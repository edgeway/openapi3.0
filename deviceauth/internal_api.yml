openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'Device authentication Internal API'
  description: 'An API for device authentication handling.
                Not exposed via the API Gateway, internal use only.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/internal/v1/devauth/tokens/verify:
    post:
      summary: Check the validity of a token
      description: |
        Besides the basic validity check, checks the token expiration time and
        user-initiated token revocation. Services which intend to use it should
        be correctly set up in the gateway\'s configuration.
      security:
      - bearerAuth: []
      responses:
        200:
          description: The token is valid.
          content: {}
        400:
          description: Missing or malformed request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Verification failed, authentication should not be granted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Token has expired - apply for a new one.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/internal/v1/devauth/tokens:
    delete:
      summary: Delete device tokens
      description: |
        This endpoint is designed to be used for device decommissionning
        and tenant account suspension purpose.
        For device decommissioning purpose both tenant_id and device_id parameters
        must be set. When both tenant_id and device_id parameters are set,
        all tokens will be deleted for device with given device_id.
        For tenant account suspension purpose only tenant_id parameter
        must be set. When device_id parameter is not set (only tenant_id parameter is set)
        all tokens for all tenant devices will be deleted.
      security:
      - bearerAuth: []
      parameters:
      - name: tenant_id
        in: query
        description: Tenant ID.
        required: true
        schema:
          type: string
      - name: device_id
        in: query
        description: Device ID.
        schema:
          type: string
      responses:
        204:
          description: Tokens deleted.
          content: {}
        400:
          description: |
            Invalid parameters. See error message for details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/internal/v1/devauth/tenant/{tenant_id}/limits/max_devices:
    get:
      summary: Max device count limit
      security:
      - bearerAuth: []
      parameters:
      - name: tenant_id
        in: path
        description: Tenant ID.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Limit'
        400:
          description: |
            Invalid parameters. See error message for details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update max device count limit
      security:
      - bearerAuth: []
      parameters:
      - name: tenant_id
        in: path
        description: Tenant ID.
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Limit'
        required: true
      responses:
        204:
          description: Limit information updated.
          content: {}
        400:
          description: |
            The request body is malformed.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: limit
  /api/internal/v1/devauth/tenants:
    post:
      summary: Provision a new tenant
      description: |
        Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      security:
      - bearerAuth: []
      requestBody:
        description: New tenant descriptor.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewTenant'
        required: true
      responses:
        201:
          description: Tenant was successfully provisioned.
          content: {}
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: tenant
  /api/internal/v1/devauth/tenants/{tid}/devices/{did}/status:
    get:
      summary: Get the status of a tenant's device
      description: |
        Returns the overall status of the device, computed over the statuses of its various authsets.
      security:
      - bearerAuth: []
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: did
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Invalid parameters. See error message for details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Tenant or device not found.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/internal/v1/devauth/tenants/{tid}/devices:
    get:
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, sorted by creation date, with optional device status filter.
      security:
      - bearerAuth: []
      parameters:
      - name: tid
        in: path
        description: Tenant identifier.
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: |
          Device status filter. If not specified, all devices are listed.
        schema:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
      - name: page
        in: query
        description: Results page number
        schema:
          type: number
          format: integer
          default: 1.0
      - name: per_page
        in: query
        description: Number of results per page
        schema:
          maximum: 500
          type: number
          format: integer
          default: 20.0
      responses:
        200:
          description: An array of devices.
          headers:
            Link:
              description: Standard header, we support 'first', 'next', and 'prev'.
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        400:
          description: Missing/malformed request params.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'

  /api/internal/v1/devauth/tenant/{id}/limits/{name}:
    put:
      summary: update the device action from device.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device action is updated.
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: The user is not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Create default the device action.
      description: Create default the device action.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: device id of device under question
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: device action is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device_Action'
        404:
          description: status not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/internal/v1/devauth/tenants/{tid}/devices/{did}:
    description: Delete tenant device by device id
    delete:
      description: Delete tenant device by device id
      summary: Delete tenant device by device id
      security:
      - bearerAuth: []
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          schema:
            type: string
        - name: did
          in: path
          description: Device identifier.
          required: true
          schema:
            type: string
      responses:
        204:
          description: device is deleted.
        400:
          description: Missing/malformed request parameters or body. See error for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/internal/v2/devauth/devices:
    description: Post devices list
    post:
      description: Post devices list
      summary: Post devices list
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/preAuthReq'
      responses:
        201:
          description: devices added.
        400:
          description: Missing/malformed request parameters or body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: conflict devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NewTenant:
      type: object
      properties:
        tenant_id:
          type: string
          description: New tenant's ID.
      description: New tenant descriptor.
      example:
        application/json:
          tenant_id: 58be8208dd77460001fe0d78
    Limit:
      required:
      - limit
      type: object
      properties:
        limit:
          type: integer
      description: Tenant account limit.
      example:
        application/json:
          limit: 123
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        application/json:
          error: 'failed to decode device group data: JSON payload is empty'
          request_id: f7881e82-0492-49fb-b459-795654e7188a
    Status:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
      description: Admission status of the device.
      example:
        application/json:
          status: accepted
    Device:
      type: object
      properties:
        id:
          type: string
          description: Mender assigned Device ID.
        identity_data:
          $ref: '#/components/schemas/IdentityData'
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
        created_ts:
          type: string
          description: Created timestamp
          format: datetime
        updated_ts:
          type: string
          description: Updated timestamp
          format: datetime
        auth_sets:
          type: array
          items:
            $ref: '#/components/schemas/AuthSet'
        decommissioning:
          type: boolean
          description: Devices that are part of ongoing decomissioning process will
            return True
    AuthSet:
      type: object
      properties:
        id:
          type: string
          description: Authentication data set ID.
        pubkey:
          type: string
          description: The device's public key, generated by the device or pre-provisioned
            by the vendor.
        identity_data:
          $ref: '#/components/schemas/IdentityData'
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
          - preauthorized
        ts:
          type: string
          description: Created timestamp
          format: datetime
      description: Authentication data set
    IdentityData:
      type: object
      properties:
        mac:
          type: string
          description: MAC address.
        sku:
          type: string
          description: Stock keeping unit.
        sn:
          type: string
          description: Serial number.
      description: |
        Device identity attributes, in the form of a JSON structure.

        The attributes are completely vendor-specific, the provided ones are just an example.
        In reference implementation structure contains vendor-selected fields,
        such as MACs, serial numbers, etc.
      example:
        application/json:
          mac: 00:01:02:03:04:05
          sku: My Device 1
          sn: SN1234567890

    Device_Params:
      type: object
      description: device param status and details
      properties:
        status:
          type: integer
        details:
          type: string

    Device_Action:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/Device_Params'
        env_vars:
          $ref: '#/components/schemas/Device_Params'
        enablers:
          $ref: '#/components/schemas/Device_Params'
    
    preAuthReq:
      type: object
      properties:
        identity_data:
          description: sent by device map[string]interface{}
          type: string
        pubkey:
          type: string
        type:
          description: flavour type
          type: string
        config_name:
          type: string
        flavor_name:
          type: string
        unique_devparams:
          type: string
      example:
        identity_data: '1:{"UUID":"fa9410d3-b2dc-49ef-a050-346499d134c4"},2:{"UUID":"fa9410d3-b2dc-49ef-a050-346499d134c5"}'
        pubkey: 'aaaaaaaaaabddblfuisbdlibqrugiluig'
        type: 'tenant'
        config_name: 'abc'
        flavour_name: 'abc'
        unique_devparams: ''
