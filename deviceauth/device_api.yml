openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'Device authentication Device API'
  description: 'An API for device authentication handling. Intended for use by devices.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/devices/v1/authentication/auth_requests:
    post:
      summary: Submit an authentication request
      description: |
        Issues an authentication token for use in device-facing API calls.

        The device presents its unique identity data and public key, and signs the request with its private key.
        If the request is valid and the device is known to the system, a valid JWT authentication token is issued.

        Note that the very first authentication request from a given device ('bootstrap' request) always
        results in 'HTTP 401 Unauthorized'. At the same time, the identity data is recorded for
        later inspection by the user, who then explicitly accepts or rejects the device via the web GUI (backed by
        the Device Admission Service). A subsequent authentication request will reflect this decision.

        Note that in case of JWT expiration, the authentication request must be sent again.
      security:
      - bearerAuth: []
      parameters:
      - name: X-MEN-Signature
        in: header
        description: |
          Request signature, computed as 'BASE64(SIGN(device_private_key, SHA256(request_body)))'.
          Verified with the public key presented by the device.
        required: true
        schema:
          type: string
      requestBody:
        description: Authentication request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        200:
          description: |
            Authentication successful - a new JWT is issued and returned.
            The JWT is signed with the API's private key ('RS256' signing algorithm), and contains
            the following standard claims:
            * 'iss' - issuer
            * 'exp' - expiry date
            * 'sub' - subject (auto-generated device ID)
            * 'jti' - token's unique identifier (tracked for the purpose of revocation)
          content:
            application/jwt:
              example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9. eyJleHAiOjE0NzYxMTkxMzYsImp0aSI6Ijg1NGIzMTA5LTQ4NjItNGEyNS1h
                MWZiLWYxMTE2MWNlN2E4NCIsImlzcyI6Ik1lbmRlciIsInN1YiI6IjlmNzM2 YmNiMjhiZmFhOTg5YjVmNWUxNDA5ZGJmMGVhYzdhNjYxMjZiNjMyZDAzYWYwZ
                mUzNGFjMjhiZjRhNzIifQ. PArg_WuoQkOiJ4kDoHYbQRjnxykeF1lIlsgJfUryhivnip2AHz5bkxxaxF20X
                Tq9mIzSDonTSukfOtkaxJTZXjCMHjgh50iwa6_pUivIYWsIJW2O9t_M9T_SC- 7Xu7IhE_iKQFb2NXxVfAG4nZKrheUM4MJBt8SxCawT2EOPopiLeIC6MOFBu_s
                Pa9RsagKSZCRaLTBWVhmEGbfn19tLOX3Z06DZql61G-VY-YuyOlBjpEsCc4Hi A1cXIdncCZKugrONOa44_m4yx0VsgRg4jCd2VO-Is-A96Jw3zkZshoD2cPXVS
                KAhFdhHja447ftuYYRq9kIQghKi3hfsPgyFZQ
        400:
          description: Missing or malformed request params or body. See the error
            message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: |
            The device cannot be granted authentication. There are multiple possible reasons, e.g.:
            * the device hasn't been accepted yet
            * the device has been explicitly rejected
            * key/signature don't match

            See the error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: auth_request
  /api/devices/v1/devices/{device_id}:
    post:
      summary: Submit the reason for device disconnection.
      description: |
        Device may not be able to send the heartbeat for every period of interver
        set. When the device regains the ability to contact the server, it will share
        the reason for not being able to connect the server.
      security:
      - bearerAuth: []
      parameters:
      - name: device_id
        in: path
        description: Device ID of the device.
        required: true
        schema:
          type: string
      requestBody:
        description: Reason for the disconnection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      responses:
        204:
          description: successfully updated.
          content: {}
        400:
          description: Missing or malformed request params or body. See the error
            message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: state

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      required:
      - id_data
      - pubkey
      type: object
      properties:
        id_data:
          type: string
          description: Vendor-specific JSON representation of the device identity
            data (MACs, serial numbers, etc.).
        pubkey:
          type: string
          description: The device's public key, generated by the device or pre-provisioned
            by the vendor.
        tenant_token:
          type: string
          description: Tenant token.
      example:
        application/json:
          id_data: '{"mac":"00:01:02:03:04:05"}'
          pubkey: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzogVU7RGDilbsoUt/DdH
            VJvcepl0A5+xzGQ50cq1VE/Dyyy8Zp0jzRXCnnu9nu395mAFSZGotZVr+sWEpO3c
            yC3VmXdBZmXmQdZqbdD/GuixJOYfqta2ytbIUPRXFN7/I7sgzxnXWBYXYmObYvdP
            okP0mQanY+WKxp7Q16pt1RoqoAd0kmV39g13rFl35muSHbSBoAW3GBF3gO+mF5Ty
            1ddp/XcgLOsmvNNjY+2HOD5F/RX0fs07mWnbD7x+xz7KEKjF+H7ZpkqCwmwCXaf0
            iyYyh1852rti3Afw4mDxuVSD7sd9ggvYMc0QHIpQNkD4YWOhNiE1AB0zH57VbUYG
            UwIDAQAB
            -----END PUBLIC KEY-----
    State:
      required:
      - state
      type: object
      properties:
        state:
          type: string
          description: "state values\n1 (dont use with API) being used for inventory\
            \ update) \n2 NW issued\n3 Reboot \n"
        UUID:
          type: string
          description: UUID assigned for the device
      example:
        application/json:
          state: 3
          UUID: 5e1d56a5de330c0001792ae6
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        application/json:
          error: 'failed to decode device group data: JSON payload is empty'
          request_id: f7881e82-0492-49fb-b459-795654e7188a
