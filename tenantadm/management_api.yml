openapi: '3.0.0'

info:
  version: '1.0.0'
  title: 'Tenantadm Management API'
  description: 'Management API used to call from UI to manage Tenants.
                This will manage creation and deletion of Tenant.
                Updating and deleting tenant device maps.
                Additionally, to update and delete particular tenants and its devicemap'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v1/tenantadm/tenants:
    get:
      summary: Get list of tanents
      description: Get list of tanents
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Results page number
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500
      responses:
        200:
          description: An array of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayofTanent'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Adding new tanent
      summary: Adding new tanent
      security:
        - bearerAuth: []
      requestBody:
        description: create server object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        200:
          description: An array of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
  /api/management/v1/tenantadm/tenants/count:
    get:
      summary: Get the number of tanent
      description: Get the number of tanent
      security:
        - bearerAuth: []
      responses:
        200:
          description: An object for tanent count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tanentCountObj'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
  /api/management/v1/tenantadm/tanents/{id}:
    put:
      summary: Update tanent
      description: Update tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      requestBody:
        description: update tanent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdate'
      responses:
        204:
          description: succes to update tanent
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete tanent
      summary: Delete tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      responses:
        204:
          description: succes to delete tanent
        404:
          description: tanent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/user/tenant:
    get:
      description: Get users of tenant.
      summary: Get users of tenant.
      security:
        - bearerAuth: []
      responses:
        200:
          description: An object for tanent count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tenants/{id}/users:
    post:
      description: Create tanent user
      summary: Create tanent user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      requestBody:
        description: user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUser'
      responses:
        201:
          description: user created
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Get list of users of tanent
      summary: Get list of users of tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      responses:
        201:
          description: array of tanent user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTenantUser'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap:
    post:
      description: Create tanent device map
      summary: Create tanent device map
      security:
        - bearerAuth: []
      requestBody:
        description: device map
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDeviceMap'
      responses:
        201:
          description: device maps for given tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDeviceMap'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap/devices/{uuid}:
    put:
      description: Update tanent device map by UUID
      summary: Update tanent device map by UUID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        201:
          description: updated device maps for given UUID
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add single tanent device map by UUID
      summary: Add single tanent device map by UUID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        201:
          description: device maps updated
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap/{id}:
    put:
      description: Update single tenant device map
      summary: Update single tenant device map
      security:
          - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDeviceMapUpdate'
      responses:
          201:
            description: device maps updated
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      description: Delete single tenant device map
      summary: Delete single tenant device map
      security:
          - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: device maps deleted
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/mapcount:
    get:
      description: Get tenant device map count
      summary: Get tenant device map count
      security:
          - bearerAuth: []
      responses:
          201:
            description: get device maps
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tanentCountObj'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/map:
    post:
      security:
        - bearerAuth: []
      summary: Create tanent device map
      description: Create tanent device map
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/fileContent'
      responses:
          201:
            description: device maps updated
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      security:
        - bearerAuth: []
      summary: Create tanent device map
      description: Create tanent device map
      parameters:
        - name: page
          in: query
          description: Results page number
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500
      responses:
          201:
            description: device maps list /need to check
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ArrayTenantDeviceMap'
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        error: 'failed to decode device group data: JSON payload is empty'
        request_id: f7881e82-0492-49fb-b459-795654e7188a
    tanentCountObj:
      description: tanentn count object
      type: object
      properties:
        count:
          type: integer
          format: int64

    fileContent:
      description: device map file conetent
      type: object
      properties:
        filename:
          type: array
          items:
            type: string
            format: binary
    Tenant:
      description: tenant struct
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        plan:
          type: string
        tenant_token:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayofTanent:
      description: array of tenant
      type: array
      items:
        $ref: '#/components/schemas/Tenant'
    TenantUpdate:
      description: tenant update
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        plan:
          type: string
        tenant_token:
          type: string
        updated_ts:
          type: string
    TenantUser:
      description: tanent adm user struct
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayTenantUser:
      description: array of tanents user
      type: array
      items:
          $ref: '#/components/schemas/TenantUser'

    TenantDeviceMap:
      description: create tanent device map struct
      type: object
      properties:
        id:
          type: string
        UUID:
          type: string
        public_key:
          type: string
        Tenant:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayTenantDeviceMap:
      description: array of tanents device map
      type: array
      items:
          $ref: '#/components/schemas/TenantDeviceMap'

    TenantDeviceMapUpdate:
      description: tenant device map update
      properties:
        Tenant:
          type: string
        updated_ts:
            type: string

    UserUpdate:
      description: user update
      type: object
      properties:
        name:
          type: string
        updated_ts:
          type: string
