openapi: '3.0.0'

info:
  version: '1.0.0'
  title: 'Tenantadm Management API'
  description: 'Management API used to call from UI to manage Tenants.
                This will manage creation and deletion of Tenant.
                Updating and deleting tenant device maps.
                Additionally, to update and delete particular tenants and its devicemap'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v1/tenantadm/tenants:
    get:
      summary: Get list of tanents
      description: Get list of tanents
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Results page number
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500

      responses:
        200:
          description: An array of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayofTanent'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Adding new tanent
      summary: Adding new tanent
      security:
        - bearerAuth: []
      requestBody:
        description: create server object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        200:
          description: An array of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tenants/count:
    get:
      summary: Get the number of tanent
      description: Get the number of tanent
      security:
        - bearerAuth: []
      responses:
        200:
          description: An object for tanent count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tanentCountObj'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
  /api/management/v1/tenantadm/tanents/{id}:
    put:
      summary: Update tanent
      description: Update tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      requestBody:
        description: update tanent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdate'
      responses:
        204:
          description: succes to update tanent
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete tanent
      summary: Delete tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      responses:
        204:
          description: succes to delete tanent
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: tanent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/user/tenant:
    get:
      description: Get users of tenant.
      summary: Get users of tenant.
      security:
        - bearerAuth: []
      responses:
        200:
          description: An object for tanent count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tenants/{id}/users:
    post:
      description: Create tanent user
      summary: Create tanent user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      requestBody:
        description: user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUser'
      responses:
        200:
          description: Success to add new server with attributes,
                       returns non overridable attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfServerAttributes'
        201:
          description: user created
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: Get list of users of tanent
      summary: Get list of users of tanent
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: server ID
          schema:
            type: string
      responses:
        201:
          description: array of tanent user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTenantUser'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap:
    post:
      description: Create tanent device map
      summary: Create tanent device map
      security:
        - bearerAuth: []
      requestBody:
        description: device map
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDeviceMap'
      responses:
        201:
          description: device maps for given tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDeviceMap'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap/devices/{uuid}:
    put:
      description: Update tanent device map by UUID
      summary: Update tanent device map by UUID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          description: tenant ID
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        201:
          description: updated device maps for given UUID
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add single tanent device map by UUID
      summary: Add single tanent device map by UUID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        201:
          description: device maps updated
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tdmap/{id}:
    put:
      description: Update single tenant device map
      summary: Update single tenant device map
      security:
          - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDeviceMapUpdate'
      responses:
          201:
            description: device maps updated
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    delete:
      description: Delete single tenant device map
      summary: Delete single tenant device map
      security:
          - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
          201:
            description: device maps deleted
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/mapcount:
    get:
      description: Get tenant device map count
      summary: Get tenant device map count
      security:
          - bearerAuth: []
      responses:
          201:
            description: get device maps
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tanentCountObj'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/map:
    post:
      security:
        - bearerAuth: []
      summary: Create tanent device map
      description: Create tanent device map
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/fileContent'
      responses:
          201:
            description: device maps updated
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    get:
      security:
        - bearerAuth: []
      summary: Create tanent device map
      description: Create tanent device map
      parameters:
        - name: page
          in: query
          description: Results page number
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500
      responses:
          201:
            description: device maps list /need to check
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ArrayTenantDeviceMap'
          400:
            description: bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          404:
            description: status not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          500:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/{id}/servers:
    description: Get server list by page number and number of entries per age
                Add new server
    get:
      summary: Get list of servers
      description: Get list of servers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Results page number
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Results page number
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500
      responses:
        200:
          description: An array of Preferences server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayofServers'
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new server
      description: Add new server
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Results page number
          required: true
          schema:
            type: string
      requestBody:
        description: Create new server entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serversObject'
      responses:
        200:
          description: Success to add new server with attributes,
                       returns non overridable attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfServerAttributes'
        201:
          description: Succes to add new server with attributes
        400:
          description: Missing or malformed request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/{id}/server/{pid}:
    description: Getting information or sending for particular server
    get:
      description: Get server information from ID
      summary: Get server information from ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: tenant ID
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: preference ID
          schema:
            type: string
      responses:
        200:
          description: Succes to get server handler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverObject'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Adding server attributes
      summary: Adding server attributes
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: tenant ID
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: preference ID
          schema:
            type: string
      requestBody:
        description: create server object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/arrayOfServerAttributes'
      responses:
        200:
          description: Succes to upsert server attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfServerAttributes'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete preferences server
      summary: Delete preferences server
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: tenant ID
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: preference ID
          schema:
            type: string
        - in: query
          name: keys
          required: false
          schema:
            type: string
      responses:
        200:
          description: Succes to delete server
        204:
          description: not found the keys
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/{id}/servers/attributes:
    description: Get particular server atributes
    get:
      security:
        - bearerAuth: []
      description: Get particular server atributes
      summary: Get particular server atributes
      parameters:
        - in: path
          name: id
          required: true
          description: tenant ID
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: instance
          required: true
          schema:
            type: string
      responses:
        200:
          description: Succes to get server attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayOfServerAttributes'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
            description: Authorization failed.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/tenantadm/tenants/{id}/download/ewxconf:
    description: Download the EWC config.
    get:
      security:
        - bearerAuth: []
      summary: Get EWC config for Tenant.
      parameters:
        - in: path
          name: id
          description: Tenant ID
          required: true
          schema:
            type: string
      responses:
        200:
            description: Succes to get EWC config.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EWCConf'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/management/v2/tenantadm/validate/tenants/{name}:
    description: Validate name as per requirement.
                 Must not be already in use.
                 [0-9][a-z] length must not exceed 12
    post:
      description: Validate tenant name.
      summary: Validate tenant name.
      parameters:
        - in: path
          name: name
          required: true
          description: Tenant name.
          schema:
            type: string
      responses:
        204:
          description: Tenant name is valide as per the requirement.
                       It is available for use.
        400:
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Already in Use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/tenantadm/validate/devices/{uuid}:
    description: Validate UUID, must be present in tenant db.
                 Must have publick key added.
                 No other tenant is using same device.
    post:
      description: Validate UUID.
      summary: Validate UUID.
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        204:
          description: UUID is valid for use.
        400:
          description: Missing/malformed request params.
                       Not present in the DB.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Already in Use or No public key assigned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v2/tenantadm/tenants/trial:
    description: Auth0 login handler.
                Sign-up and create new Tenant.
    post:
      description: Sign-up and create new Tenant.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrialTenant'
      responses:
        201:
          description: Successfully sign-up and created tenant.
        400:
          description: Missing/malformed request params.
                       Not present in the DB.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorised Auth0 user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Already in Use or No public key assigned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        error: 'Error string'
        request_id: f7881e82-0492-49fb-b459-795654e7188a
    tanentCountObj:
      description: tanentn count object
      type: object
      properties:
        count:
          type: integer
          format: int64

    fileContent:
      description: device map file conetent
      type: object
      properties:
        filename:
          type: array
          items:
            type: string
            format: binary
    Tenant:
      description: tenant struct
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        plan:
          type: string
        tenant_token:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayofTanent:
      description: array of tenant
      type: array
      items:
        $ref: '#/components/schemas/Tenant'
    TenantUpdate:
      description: tenant update
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        plan:
          type: string
        tenant_token:
          type: string
        updated_ts:
          type: string
    TenantUser:
      description: tanent adm user struct
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayTenantUser:
      description: array of tanents user
      type: array
      items:
          $ref: '#/components/schemas/TenantUser'

    TenantDeviceMap:
      description: create tanent device map struct
      type: object
      properties:
        id:
          type: string
        UUID:
          type: string
        public_key:
          type: string
        Tenant:
          type: string
        created_ts:
          type: string
        updated_ts:
          type: string
    ArrayTenantDeviceMap:
      description: array of tanents device map
      type: array
      items:
          $ref: '#/components/schemas/TenantDeviceMap'

    TenantDeviceMapUpdate:
      description: tenant device map update
      properties:
        Tenant:
          type: string
        updated_ts:
            type: string

    UserUpdate:
      description: user update
      type: object
      properties:
        name:
          type: string
        updated_ts:
          type: string

    serversGetObject:
      description: forming server object
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        instance:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/serverAttribute'
    ArrayofServers:
      description: array of servers
      type: array
      items:
        $ref: '#/components/schemas/serversGetObject'
    serverAttribute:
      description: create object for sever attributes
      type: object
      properties:
        name:
          type: string
          description: attribute name
        description:
          type: string
          description: description of array index
        value:
          type: string
          description: values such as ip address, mac address
        override:
          type: boolean
    arrayOfServerAttributes:
      description: Array of server attributes
      type: array
      items:
        $ref: '#/components/schemas/serverAttribute'
    serversObject:
      description: forming server object
      type: object
      properties:
        type:
          type: string
        instance:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/serverAttribute'
    serverObject:
      description: forming server object
      type: object
      $ref: '#/components/schemas/serversGetObject'

    EWM:
      type: object
      properties:
        url:
          type: string
        rmqPort:
          type: string

    PortRangeDowld:
      type: object
      properties:
        start:
          type: string
        end:
          type: string

    Ports:
      type: object
      properties:
        onvif_port_range:
          $ref: '#/components/schemas/PortRangeDowld'
        rtsp_port_range:
          $ref: '#/components/schemas/PortRangeDowld'
        webpage_port_range:
          $ref: '#/components/schemas/PortRangeDowld'

    EWCConf:
      description: JSON object for EWC cofniguration.
      type: object
      properties:
        api_key:
          type: string
        tenant_id:
          type: string
        ewm:
          $ref: '#/components/schemas/EWM'
        infraType:
          type: string
        domain:
          type: string
        ports:
          $ref: '#/components/schemas/Ports'
      example:
        {"api_key":"$2a$10$ANLZNz9rr8qBWppXUR/tIOTDOaCQ9P.cTNGEo/TTVW8/8sr3XdHNS","tenant_id":"afca7616-3ce0-4deb-a729-775f0d07b2d0","ewm":{"url":"localhost","rmqPort":"5000"},"infraType":"ewc","domain":"smart-ewc.edgeway.io","ports":{"onvif_port_range":{"start":"7501","end":"7700"},"rtsp_port_range":{"start":"7701","end":"7900"},"webpage_port_range":{"start":"10001","end":"10010"}}}

    Address:
      description: Address information of tenant.
      type: object
      properties:
        first_name:
          type: string
        family_name:
          type: string
        line1:
          type: string
        line2:
          description: Line 2 address is non mendatory field.
          type: string
        country:
          type: string
        post_code:
          type: string
    TenantsInfo:
      description: Tenants personal information.
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        phone_number:
          type: integer
        organization:
          type: string

    TrialTenant:
      description: Tenant struct
      type: object
      properties:
        email:
          type: string
        auth0:
          description: Get from Auth0 login.
          type: boolean
        password:
          type: string
        tenant_name:
          type: string
        tos:
          type: boolean
          description: Get from Auth0 login.
        plan:
          type: string
        UUID:
          type: string
        marketing:
          type: string
        g-recaptcha-response:
          type: string
        deployment_type:
          type: integer
          description: Deployment type can be 'SDTV hosted EWC' 1 or 'Customer hosted EWC' 2
        tenant_info:
          $ref: '#/components/schemas/TenantsInfo'

      example: '{
        "email":"test2@gmail.com",
        "auth0": True,
        "password": "abcd",
        "tenant_name":"abc12346",
        "tos": True,
        "UUID":"0071d9c9-0b82-4602-aee0-4306436d87de",
        "g-recaptcha-response":"goolecaptch",
        "deployment_type": 2,
        "tenant_info": {
            "address":{
                "first_name":"Abc",
                "family_name": "Def",
                "line1": "abd",
                "country":"in",
                "post_code":"123456",
            },
            "phone_number":123456,
            "organization":"abcfdg",
        },

    }'
