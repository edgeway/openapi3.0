openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'AI Deployments Management API'
  description: 'An API for AI deployments management.
                Intended for use by the web GUI.'
  contact:
    name: Edgeway
    email: devops.vep@smardtv.com

servers:
  - url: https://ewm-preprod.edgeway.io
    description: Dev Server
  
  - url: https://ewm-preprod-mt.edgeway.io
    description: Prod Server

paths:
  /api/management/v1/aideployments/deployments:
    get:
      summary: Find all AI deployments
      description: |
        Returns a filtered collection of AI deployments in the system,
        including active and historical. If both 'status' and 'query' are
        not specified, all devices are listed.
      security:
      - bearerAuth: []
      parameters:
      - name: status
        in: query
        description: AI Deployment status filter.
        schema:
          type: string
          enum:
          - inprogress
          - finished
          - pending
      - name: search
        in: query
        description: AI Deployment name or description filter.
        schema:
          type: string
      - name: page
        in: query
        description: Results page number
        schema:
          type: number
          format: integer
          default: 1.0
      - name: per_page
        in: query
        description: Number of results per page
        schema:
          maximum: 500
          type: number
          format: integer
          default: 20.0
      - name: created_before
        in: query
        description: List only AI deployments created before and equal to Unix timestamp
          (UTC)
        schema:
          type: number
          format: integer
      - name: created_after
        in: query
        description: List only AI deployments created after and equal to Unix timestamp
          (UTC)
        schema:
          type: number
          format: integer
      responses:
        200:
          description: Successful response.
          headers:
            Link:
              description: Standard header, we support 'first', 'next', and 'prev'.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployment'
              example:
              - created: 2016-02-11T13:03:17.063493443Z
                status: finished
                name: production
                artifact_name: Application 0.0.1
                id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
                device_count: 10
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a AI deployment
      description: |
        Deploy software to specified devices. Artifact is auto assigned to the
        device from all available artifacts based on artifact name and device type.
        Devices for which there are no compatible artifacts to be installed are
        considered finished successfully as well as receive status of `noartifact`.
        If there is no artifacts for the AI deployment, AI deployment will not be created
        and the 422 Unprocessable Entity status code will be returned.
      security:
      - bearerAuth: []
      requestBody:
        description: New AI deployment that needs to be created.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewDeployment'
        required: true
      responses:
        201:
          description: New AI deployment created.
          headers:
            Location:
              description: URL of the newly created AI deployment.
              schema:
                type: string
          content: {}
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: AI deployment
  /api/management/v1/aideployments/deployments/{id}:
    get:
      summary: Get the details of a selected AI deployment
      description: |
        Returns the details of a particular AI deployment.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: AI Deployment identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
              example:
                created: 2016-02-11T13:03:17.063493443Z
                name: production
                artifact_name: Application 0.0.1
                id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/deployments/{deployment_id}/status:
    put:
      summary: Abort the AI deployment
      description: |
        Aborts the AI deployment that is pending or in progress. For devices included in this AI deployment it means that:
        - Devices that have completed the AI deployment (i.e. reported final status) are not affected by the abort, and their original status is kept in the deployment report.
        - Devices that do not yet know about the AI deployment at time of abort will not start the AI deployment.
        - Devices that are in the middle of the AI deployment at time of abort will finish its AI deployment normally, but they will not be able to change its deployment status so they will perform rollback.
      security:
      - bearerAuth: []
      parameters:
      - name: deployment_id
        in: path
        description: AI Deployment identifier.
        required: true
        schema:
          type: string
      requestBody:
        description: AI Deployment status.
        content:
          '*/*':
            schema:
              required:
              - status
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - aborted
        required: true
      responses:
        204:
          description: Status updated successfully.
          content: {}
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: Status
  /api/management/v1/aideployments/deployments/{deployment_id}/statistics:
    get:
      summary: Get the statistics of a selected AI deployment
      description: |
        Returns the statistics of a selected AI deployment statuses.
      security:
      - bearerAuth: []
      parameters:
      - name: deployment_id
        in: path
        description: AI Deployment identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStatistics'
              example:
                success: 3
                pending: 1
                failure: 0
                downloading: 1
                installing: 2
                rebooting: 3
                noartifact: 0
                already-installed: 0
                aborted: 0
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/deployments/{deployment_id}/devices:
    get:
      summary: List devices of a AI deployment
      description: |
        Returns a collection of a selected AI deployment's status for each assigned device.
      security:
      - bearerAuth: []
      parameters:
      - name: deployment_id
        in: path
        description: AI Deployment identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
              example:
              - id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
                finished: 2016-03-11T13:03:17.063493443Z
                status: pending
                created: 2016-02-11T13:03:17.063493443Z
                device_type: Raspberry Pi 3
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/deployments/{deployment_id}/devices/{device_id}/log:
    get:
      summary: Get the log of a selected device's AI deployment
      description: |
        Returns the log of a selected device, collected during a particular AI deployment.
      security:
      - bearerAuth: []
      parameters:
      - name: deployment_id
        in: path
        description: AI Deployment identifier.
        required: true
        schema:
          type: string
      - name: device_id
        in: path
        description: Device identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content: {}
        404:
          description: Not Found.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/deployments/devices/{id}:
    delete:
      summary: Remove device from all AI deployments
      description: Set 'decommissioned' status to all pending device AI deployments for
        a given device
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: System wide device identifier
        required: true
        schema:
          type: string
      responses:
        204:
          description: Device was removed
          content: {}
        500:
          description: Internal server error.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/deployments/releases:
    get:
      summary: List releases
      description: |
        Returns a collection of releases, allows filtering by release name.
      security:
      - bearerAuth: []
      parameters:
      - name: name
        in: query
        description: Release name filter.
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
              example:
              - name: my-app-v1.0.1
                artifacts:
                - name: my-app-v1.0.1
                  description: Application v1.0.1
                  device_types_compatible:
                  - Beagle Bone
                  id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                  signed: false
                  modified: 2016-03-11T13:03:17.063493443Z
                  info:
                    type_info:
                      type: rootfs
                  files:
                  - name: rootfs-image-1
                    checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                    size: 23421351
                    date: 2016-03-11T13:03:17.063+0000
                  metadata: {}
                - name: my-app-v1.0.1
                  description: Application v1.0.1
                  device_types_compatible:
                  - Raspberry Pi
                  id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                  signed: false
                  modified: 2016-03-11T13:03:17.063493443Z
                  info:
                    type_info:
                      type: rootfs
                  files:
                  - name: rootfs-image-1
                    checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                    size: 23421351
                    date: 2016-03-11T13:03:17.063+0000
                  metadata: {}
              - name: my-app-v2.0.0
                artifacts:
                - name: my-app-v2.0.0
                  description: Application v2.0.0
                  device_types_compatible:
                  - Beagle Bone
                  id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                  signed: false
                  modified: 2016-03-11T13:03:17.063493443Z
                  info:
                    type_info:
                      type: rootfs
                  files:
                  - name: rootfs-image-1
                    checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                    size: 23421351
                    date: 2016-03-11T13:03:17.063+0000
                  metadata: {}
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/artifacts:
    get:
      summary: List known artifacts
      description: |
        Returns a collection of all artifacts.
      security:
      - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifact'
              example:
              - name: Application 1.0.0
                description: Johns Monday test build
                device_types_compatible:
                - Beagle Bone
                id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                signed: false
                modified: 2016-03-11T13:03:17.063493443Z
                info:
                  type_info:
                    type: rootfs
                files:
                - name: rootfs-image-1
                  checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                  size: 123
                  date: 2016-03-11T13:03:17.063+0000
                metadata: {}
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Upload Edgeway artifact
      description: |
        Upload Edgeway artifact. Multipart request with meta and artifact.

        Supports artifact (versions v1, v2)[https://docs.edgeway.io/development/architecture/edgeway-artifacts#versions].
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - artifact
              - size
              properties:
                size:
                  type: integer
                  description: Size of the artifact file in bytes.
                  format: long
                description:
                  type: string
                artifact:
                  type: string
                  description: Artifact. It has to be the last part of request.
                  format: binary
        required: true
      responses:
        201:
          description: Artifact uploaded.
          headers:
            Location:
              description: URL of the newly uploaded artifact.
              schema:
                type: string
          content: {}
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/artifacts/{id}:
    get:
      summary: Get the details of a selected artifact
      description: |
        Returns the details of a selected artifact.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Artifact identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
              example:
                name: Application 1.0.0
                description: Johns Monday test build
                device_types_compatible:
                - Beagle Bone
                id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                signed: false
                modified: 2016-03-11T13:03:17.063493443Z
                info:
                  type_info:
                    type: rootfs
                files:
                - name: rootfs-image-1
                  checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                  size: 123
                  date: 2016-03-11T13:03:17.063+0000
                metadata: {}
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update description of a selected artifact
      description: |
        Edit description. Artifact is not allowed to be edited if it was used
        in any AI deployment.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Artifact identifier.
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ArtifactUpdate'
        required: false
      responses:
        204:
          description: The artifact metadata updated successfully.
          content: {}
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        422:
          description: Unprocessable Entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: artifact
    delete:
      summary: Delete the artifact
      description: |
        Deletes the artifact from file and artifacts storage.
        Artifacts used by AI deployments in progress can not be deleted
        until AI deployment finishes.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Artifact identifier.
        required: true
        schema:
          type: string
      responses:
        204:
          description: The artifact deleted successfully.
          content: {}
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Artifact used by active AI deployment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/artifacts/{id}/download:
    get:
      summary: Get the download link of a selected artifact
      description: |
        Generates signed URL for downloading artifact file. URI can be used only
        with GET HTTP method. Link supports such HTTP headers: 'Range',
        'If-Modified-Since', 'If-Unmodified-Since' It is valid for specified
        period of time.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Artifact identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactLink'
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/management/v1/aideployments/limits/storage:
    get:
      summary: Get storage limit and current storage usage
      description: |
        Get storage limit and current storage usage for currently logged in user.
        If the limit value is 0 it means there is no limit for storage for logged in user.
      security:
      - bearerAuth: []
      responses:
        200:
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimit'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      description: Error descriptor.
      example:
        application/json:
          error: 'Error string'
          request_id: f7881e82-0492-49fb-b459-795654e7188a
    NewDeployment:
      required:
      - artifact_name
      - devices
      - name
      type: object
      properties:
        name:
          type: string
        artifact_name:
          type: string
        devices:
          type: array
          items:
            type: string
            description: An array of devices' identifiers.
      example:
        application/json:
        - name: production
          artifact_name: Application 0.0.1
          devices:
          - 00a0c91e6-7dec-11d0-a765-f81d4faebf6
    Deployment:
      required:
      - artifact_name
      - created
      - device_count
      - id
      - name
      - status
      type: object
      properties:
        created:
          type: string
          format: date-time
        name:
          type: string
        artifact_name:
          type: string
        id:
          type: string
        finished:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - inprogress
          - pending
          - finished
        device_count:
          type: integer
        artifacts:
          type: array
          items:
            type: string
            description: An array of artifact's identifiers.
      example:
        application/json:
          created: 2016-02-11T13:03:17.063493443Z
          status: finished
          name: production
          artifact_name: Application 0.0.1
          id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
          finished: 2016-03-11T13:03:17.063493443Z
    DeploymentStatistics:
      required:
      - aborted
      - already-installed
      - downloading
      - failure
      - installing
      - noartifact
      - pending
      - rebooting
      - success
      type: object
      properties:
        success:
          type: integer
          description: Number of successful AI deployments.
        pending:
          type: integer
          description: Number of pending AI deployments.
        downloading:
          type: integer
          description: Number of AI deployments being downloaded.
        rebooting:
          type: integer
          description: Number of AI deployments devices are rebooting into.
        installing:
          type: integer
          description: Number of AI deployments devices being installed.
        failure:
          type: integer
          description: Number of failed AI deployments.
        noartifact:
          type: integer
          description: Do not have appropriate artifact for device type.
        already-installed:
          type: integer
          description: Number of devices unaffected by upgrade, since they are already
            running the specified software version.
        aborted:
          type: integer
          description: Number of AI deployments aborted by user.
      example:
        application/json:
          success: 3
          pending: 1
          failure: 0
          downloading: 1
          installing: 2
          rebooting: 3
          noartifact: 0
          already-installed: 0
          aborted: 0
    Device:
      required:
      - id
      - log
      - status
      type: object
      properties:
        id:
          type: string
          description: Device identifier.
        finished:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - downloading
          - installing
          - rebooting
          - pending
          - success
          - failure
          - noartifact
          - already-installed
          - aborted
          - decommissioned
        created:
          type: string
          format: date-time
        device_type:
          type: string
        log:
          type: boolean
          description: Availability of the device's AI deployment log.
        state:
          type: string
          description: State reported by device
        substate:
          type: string
          description: Additional state information
      example:
        application/json:
        - id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
          finished: 2016-03-11T13:03:17.063493443Z
          status: inprogress
          created: 2016-02-11T13:03:17.063493443Z
          device_type: Raspberry Pi 3
          log: false
          state: installing
          substate: installing.enter;script:foo-bar
    ArtifactUpdate:
      type: object
      properties:
        description:
          type: string
      description: Artifact information update.
      example:
        description: Some description
    ArtifactTypeInfo:
      type: object
      properties:
        type:
          type: string
      description: |
        Information about update type.
    UpdateFile:
      type: object
      properties:
        name:
          type: string
        checksum:
          type: string
        size:
          type: integer
        date:
          type: string
          format: date-time
      description: |
        Information about particular update file.
    Update:
      type: object
      properties:
        type_info:
          $ref: '#/components/schemas/ArtifactTypeInfo'
        files:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFile'
        meta_data:
          type: object
          properties: {}
          description: |
            meta_data is an object of unknown structure as this is dependent of update type (also custom defined by user)
      description: |
        Single updated to be applied.
    ArtifactInfo:
      type: object
      properties:
        format:
          type: string
        version:
          type: integer
      description: |
        Information about artifact format and version.
    Artifact:
      required:
      - description
      - device_types_compatible
      - id
      - modified
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        device_types_compatible:
          type: array
          items:
            type: string
            description: An array of compatible device types.
        id:
          type: string
        signed:
          type: boolean
          description: Idicates if artifact is signed or not.
        modified:
          type: string
          description: |
            Represents creation / last edition of any of the artifact properties.
          format: date-time
        size:
          type: number
          description: |
            Artifact total size in bytes - the size of the actual file that will be transferred to the device (compressed).
          format: integer
        info:
          $ref: '#/components/schemas/ArtifactInfo'
        updates:
          type: array
          items:
            $ref: '#/components/schemas/Update'
      description: Detailed artifact.
      example:
        application/json:
          name: Application 1.0.0
          size: 36891648
          description: Johns Monday test build
          device_types_compatible:
          - Beagle Bone
          id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
          signed: false
          modified: 2016-03-11T13:03:17.063493443Z
          info:
            type_info:
              type: rootfs
          files:
          - name: rootfs-image-1
            checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
            size: 123
            date: 2016-03-11T13:03:17.063+0000
          metadata: {}
    ArtifactLink:
      required:
      - expire
      - uri
      type: object
      properties:
        uri:
          type: string
        expire:
          type: string
          format: date-time
      description: URL for artifact file download.
      example:
        application/json:
          uri: http://ewm-preprod-saas.edgeway.io/artifact.tar.gz.edgeway
          expire: 2016-10-29T10:45:34Z
    StorageLimit:
      required:
      - limit
      - usage
      type: object
      properties:
        limit:
          type: integer
          description: |
            Storage limit in bytes. If set to 0 - there is no limit for storage.
        usage:
          type: integer
          description: |
            Current storage usage in bytes.
      description: Tenant account storage limit and storage usage.
      example:
        application/json:
          limit: 1073741824
          usage: 536870912
    Release:
      type: object
      properties:
        name:
          type: string
          description: |
            release name.
        artifacts:
          type: array
          description: |
            list of artifacts for this release.
          items:
            $ref: '#/components/schemas/Artifact'
      description: Groups artifacts with the same release name into a single resource.
      example:
        application/json:
          name: my-app-v1.0.1
          artifacts:
          - name: my-app-v1.0.1
            description: Application v1.0.1
            device_types_compatible:
            - Beagle Bone
            id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
            signed: false
            modified: 2016-03-11T13:03:17.063493443Z
            info:
              type_info:
                type: rootfs
            files:
            - name: rootfs-image-1
              checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
              size: 23421351
              date: 2016-03-11T13:03:17.063+0000
            metadata: {}
          - name: my-app-v1.0.1
            description: Application v1.0.1
            device_types_compatible:
            - Raspberry Pi
            id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
            signed: false
            modified: 2016-03-11T13:03:17.063493443Z
            info:
              type_info:
                type: rootfs
            files:
            - name: rootfs-image-1
              checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
              size: 23421351
              date: 2016-03-11T13:03:17.063+0000
            metadata: {}
  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    InvalidRequestError:
      description: Invalid Request.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntityError:
      description: Unprocessable Entity.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
